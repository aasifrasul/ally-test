version: '3.8'

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - '3100:3100'
        environment:
            - ENV=development
            - POSTGRES_HOST=postgres
            - MYSQL_HOST=mysql
            - MONGODB_HOST=mongodb
            - REDIS_HOST=redis
            - REDIS_URL=redis://redis:6379
        depends_on:
            - postgres
            - mysql
            - mongodb
            - redis
        volumes:
            - .:/app
            - /app/node_modules
        networks:
            - app-network

    postgres:
        image: postgres:15
        environment:
            POSTGRES_DB: test
            POSTGRES_USER: test
            POSTGRES_PASSWORD: test
        ports:
            - '5432:5432'
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - app-network

    mysql:
        image: mysql:8.0
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: test
            MYSQL_USER: test
            MYSQL_PASSWORD: test
        ports:
            - '3306:3306'
        volumes:
            - mysql_data:/var/lib/mysql
        networks:
            - app-network

    mongodb:
        image: mongo:6.0
        environment:
            MONGO_INITDB_ROOT_USERNAME: test
            MONGO_INITDB_ROOT_PASSWORD: test
        ports:
            - '27017:27017'
        volumes:
            - mongodb_data:/data/db
        networks:
            - app-network

    redis:
        image: redis:7.2
        ports:
            - '6379:6379'
        healthcheck:
            test: ['CMD', 'redis-cli', 'ping']
            interval: 5s
            timeout: 5s
            retries: 5
        restart: always
        networks:
            - app-network # Make sure all services are on the same network

volumes:
    postgres_data:
    mysql_data:
    mongodb_data:

networks:
    app-network:
        driver: bridge
# To start the services: docker-compose up --build
# To stop the services: docker-compose down
